  <h2 style="color: orange">Exprenses</h2>
    <h2>Today</h2>
    <h2>Week</h2>
    <h2>Month</h2>



    <div style="background-color:#0095ff">
        <h2 style="color: greenyellow">Income</h2>
        <h2>Today</h2>
        <h2>Week</h2>
        <h2>Month</h2>
    </div>


    <h2 th:text="' Count:' + ${count} + '_UAN'" ></h2>

        for (int i = 0; i < 10; i++) {
                        Bonus bonus = new Bonus(getRandomLong(),"something"+i);
                        bonus.setCount(count);
                        bonus.setDate(LocalDate.of(2024, 1+i, 2+i));
                        bonusService.addBonus(bonus);

                    }
                    for (int i = 0; i < 10; i++) {
                        Salary salary = new Salary(getRandomLong(),"something"+i);
                        salary .setCount(count);
                        salary .setDate(LocalDate.of(2024, 1+i, 2+i));
                        salaryService.addSalary(salary);

                    }

                    for (int i = 0; i < 10; i++) {
                        Another another = new Another(getRandomLong(),"something"+i);
                        another.setCount(count);
                        another.setDate(LocalDate.of(2024, 1+i, 2+i));
                        anotherService.addAnother(another);

                    }
                    for (int i = 0; i < 10; i++) {
                        Presents presents = new Presents(getRandomLong(),"something"+i);
                        presents.setCount(count);
                        presents.setDate(LocalDate.of(2024, 1+i, 2+i));
                        presentsService.addPresent(presents);

                    }


 @Query("select a from Article a where a.creationDateTime <= :creationDateTime")
    List<Article> findAllWithCreationDateTimeBefore(
      @Param("creationDateTime") Date creationDateTime);

      SELECT CURDATE() - INTERVAL CASE WHEN DAYOFWEEK(CURDATE()) = 1 THEN 13 ELSE DAYOFWEEK(CURDATE()) + 5 END DAY -- start of the previous week
      SELECT CURDATE() - INTERVAL CASE WHEN DAYOFWEEK(CURDATE()) = 1 THEN 6 ELSE DAYOFWEEK(CURDATE()) - 1 END DAY -- end of the previous week


       /*   @Query(value = "SELECT * FROM bonus " +
                  "WHERE DATE >= DATE_FORMAT(NOW(), '%Y-%m-01')\n" +
                  "AND DATE < DATE_FORMAT(NOW(), '%Y-%m-01') + INTERVAL 2 WEEK", nativeQuery = true)
          List<Bonus> findAllDatesByWeek(); */

         // @Query(value = "SELECT * FROM count.bonus WHERE DATE BETWEEN CURRENT_DATE() – INTERVAL 7 DAY AND CURRENT_DATE()", nativeQuery = true)
         //  List<Bonus> findAllDatesByWeek();

         // @Query(value = "SELECT CURDATE() – INTERVAL 7 DAY", nativeQuery = true)
         // List<Bonus> findAllDatesByWeek();


          /*   @GetMapping("/allBonusesByDay")
             public String allBonusByDay(Model model,
                                         @RequestParam(required = false, defaultValue = "0") Integer page) {
                 if (page < 0) page = 0;
                 List<Bonus> bonusList = bonusService.findAll(PageRequest.of(page,
                         6, Sort.Direction.DESC, "id"));

                 model.addAttribute("date", LocalDate.now());
                 model.addAttribute("dayList", bonusList);
                 model.addAttribute("allPages", getPageCount());
                 return "all/all_bonuses";
             } */

              /*  @GetMapping("/allBonusesByDay")
                 public String allBonusByDay(Model model) {

                     model.addAttribute("date", LocalDate.now());
                     model.addAttribute("dayList", bonusService.findAllBonusesByToday());
                     return "all/all_bonuses";
                 } */


                 <div th:each="el,iter : ${dayList}"  th:class="${iter.size}" class="pagination">